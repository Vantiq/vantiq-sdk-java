
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.jreleaser' version '1.18.0'
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

//
// Project Settings
//
version = '1.5.0'
group = 'io.vantiq'

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    mavenCentral()
}

ext {
    okhttpVersion = '4.12.0'
    guavaVersion = '32.1.3-jre'
    gsonVersion = '2.10.1'
}

dependencies {
    api "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    api "com.google.code.gson:gson:${gsonVersion}"
    api "com.google.guava:guava:${guavaVersion}"

    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

tasks.withType(Test) {
    jvmArgs += ['--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED']
}

test {
    useJUnit {
        excludeCategories 'io.vantiq.client.intg.IntegrationTests'
    }
}

task intgTest(type:Test) {
    systemProperties['server']   = System.getProperty('server')
    systemProperties['username'] = System.getProperty('username')
    systemProperties['password'] = System.getProperty('password')
    systemProperties['token'] = System.getProperty('token')
    def useProxy = System.getProperty("proxyHost")
    if (useProxy) {
        def scheme = new URI(System.getProperty('server')).getScheme()
        systemProperties["${scheme}.proxyHost"] = System.getProperty('proxyHost')
        systemProperties["${scheme}.proxyPort"] = System.getProperty('proxyPort')
        systemProperties["${scheme}.proxyUser"] = System.getProperty('proxyUser')
        systemProperties["${scheme}.proxyPassword"] = System.getProperty('proxyPassword')
        systemProperties["${scheme}.nonProxyHosts"] = ""
    }

    useJUnit {
        includeCategories 'io.vantiq.client.intg.IntegrationTests'
    }
}

shadowJar {

    archiveClassifier.set('tests')
    from sourceSets.test.output
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {

    publications {

        maven(MavenPublication) {

            from components.java

            groupId = 'io.vantiq'
            artifactId = 'vantiq-sdk'

            pom {
                name = 'Vantiq Java SDK'
                packaging 'jar'
                description = 'Vantiq SDK for Java and Android'
                url = 'https://vantiq.com/'

                licenses {
                    license {
                        name = 'MIT License'
                        url ='https://github.com/Vantiq/vantiq-sdk-java/blob/master/LICENSE'
                    }
                }
                scm {
                    url = 'https://github.com/Vantiq/vantiq-sdk-java'
                    connection = 'scm:git:git://github.com/Vantiq/vantiq-sdk-java.git'
                    developerConnection = 'scm:git:ssh://git@github.com/Vantiq/vantiq-sdk-java.git'
                }
                developers {
                    developer {
                        id = 'vantiq'
                        name = 'Vantiq Development'
                        email = 'ossrh-admin@vantiq.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {

    signing {
        active = 'ALWAYS'
        armored = true
        mode = 'FILE'
    }

    project {
        inceptionYear = "2024"
        author("Vantiq")
        description = "vantiq-sdk"
    }

    release {
        github {
            skipRelease = true
            skipTag = true
        }
    }

    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = "https://central.sonatype.com/api/v1/publisher"
                    stagingRepository('build/staging-deploy')
                    setAuthorization("Basic")
                    sign = false            // Don't do this again - breaks checksums on maven
                    checksums = false       // Don't do this again - breaks checksums on maven
                    retryDelay = 60
                    readTimeout = 60
                    connectTimeout = 60
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}


