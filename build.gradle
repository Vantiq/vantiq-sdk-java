buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'

//
// Project Settings
//
group            = 'io.vantiq'
archivesBaseName = 'vantiq-sdk'
version          = '1.1.2'

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    mavenCentral()
}

ext {
    okhttpVersion = '4.12.0'
    guavaVersion = '31.1-jre'
    gsonVersion = '2.10.1'
}

dependencies {
    compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    compile "com.google.code.gson:gson:${gsonVersion}"
    compile "com.google.guava:guava:${guavaVersion}"

    testCompile "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testCompile 'junit:junit:4.13.2'
    testCompile 'org.hamcrest:hamcrest-library:2.2'
}

test {
    useJUnit {
        excludeCategories 'io.vantiq.client.intg.IntegrationTests'
    }
}

task intgTest(type:Test) {
    systemProperties['server']   = System.getProperty('server')
    systemProperties['username'] = System.getProperty('username')
    systemProperties['password'] = System.getProperty('password')
    systemProperties['token'] = System.getProperty('token')
    useJUnit {
        includeCategories 'io.vantiq.client.intg.IntegrationTests'
    }
}

shadowJar {
    classifier = 'tests'
    from sourceSets.test.output
    configurations = [project.configurations.testRuntime]
}

//
// Ensure we create sources and javadoc JAR files for publishing
//
task sourcesJar(type:Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type:Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

//
// Sonatype publishing support
//
if (rootProject.hasProperty('ossrhUsername') && rootProject.hasProperty('ossrhPassword') &&
        rootProject.hasProperty('signing.keyId') && rootProject.hasProperty('signing.password') &&
        rootProject.hasProperty('signing.secretKeyRingFile')) {

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Vantiq Java SDK'
                    packaging 'jar'
                    description 'Vantiq SDK for Java and Android'
                    url 'https://vantiq.com/'

                    scm {
                        url 'https://github.com/Vantiq/vantiq-sdk-java'
                        connection 'scm:git:git://github.com/Vantiq/vantiq-sdk-java.git'
                        developerConnection 'scm:git:ssh://git@github.com/Vantiq/vantiq-sdk-java.git'
                    }

                    licenses {
                        license {
                            name 'MIT License'
                            url 'https://github.com/Vantiq/vantiq-sdk-java/blob/master/LICENSE'
                        }
                    }

                    developers {
                        developer {
                            id 'vantiq'
                            name 'Vantiq Development'
                            email 'ossrh-admin@vantiq.com'
                        }
                    }
                }
            }
        }
    }
}